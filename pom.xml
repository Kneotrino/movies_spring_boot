<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.1.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.clay7</groupId>
  <artifactId>movies</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>movies</name>
  <description>Demo project for Spring Boot</description>

  <properties>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <!--		<dependency>-->
    <!--			<groupId>org.springframework.boot</groupId>-->
    <!--			<artifactId>spring-boot-starter-data-mongodb</artifactId>-->
    <!--		</dependency>-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!--        <dependency>-->
    <!--            <groupId>org.flywaydb</groupId>-->
    <!--            <artifactId>flyway-core</artifactId>-->
    <!--        </dependency>-->
    <!--        <dependency>-->
    <!--            <groupId>org.springframework.session</groupId>-->
    <!--            <artifactId>spring-session-core</artifactId>-->
    <!--        </dependency>-->

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.restdocs</groupId>
      <artifactId>spring-restdocs-mockmvc</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>test</scope>
    </dependency>
    <!--        <dependency>-->
    <!--            <groupId>org.springframework.security</groupId>-->
    <!--            <artifactId>spring-security-test</artifactId>-->
    <!--            <scope>test</scope>-->
    <!--        </dependency>-->

    <!-- https://mvnrepository.com/artifact/org.jooq/jooq -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>3.12.3</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.jooq/jooq-codegen -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
      <version>3.12.3</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.jooq/jooq-meta -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
      <version>3.12.3</version>
    </dependency>


  </dependencies>

  <profiles>
    <profile>
      <id>test</id>
      <properties>
        <appEnv>test</appEnv>
        <profiles.active>test</profiles.active>
        <db.name>movies</db.name>
        <db.url>jdbc:postgresql://localhost:5432/${db.name}</db.url>
        <db.user>kneotrino</db.user>
        <db.password>kneotrino</db.password>
      </properties>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <appEnv>prod</appEnv>
        <profiles.active>prod</profiles.active>
        <db.name>indo_loan_dev</db.name>
        <db.url>jdbc:mysql://192.168.8.14/${db.name}</db.url>
        <db.user>kneotrino</db.user>
        <db.password>password</db.password>
      </properties>
    </profile>
  </profiles>


  <build>
    <plugins>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>1.5.8</version>
        <executions>
          <execution>
            <id>generate-docs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html</backend>
              <doctype>book</doctype>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-asciidoctor</artifactId>
            <version>${spring-restdocs.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>

        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>3.12.3</version>

        <!-- The plugin should hook into the generate goal -->
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>

        <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.4.1</version>
          </dependency>
        </dependencies>

        <configuration>

          <!-- JDBC connection parameters -->
          <jdbc>
            <driver>org.postgresql.Driver</driver>
            <url>jdbc:postgresql://localhost:5432/movies</url>
            <user>kneotrino</user>
            <password>kneotrino</password>
          </jdbc>

          <!-- Generator parameters -->
          <generator>
            <database>
              <name>org.jooq.meta.postgres.PostgresDatabase</name>
              <includes>.*</includes>
              <excludes></excludes>
              <inputSchema>public</inputSchema>
            </database>
            <generate>
              <pojos>true</pojos>
              <javaTimeTypes>true</javaTimeTypes>
              <springAnnotations>true</springAnnotations>
            </generate>
            <target>
              <packageName>com.clay7.movies.jooq</packageName>
              <directory>src/main/java/</directory>
            </target>
          </generator>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
